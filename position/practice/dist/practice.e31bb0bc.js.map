{"version":3,"sources":["index.js"],"names":["tabs","document","querySelectorAll","panels","i","length","tab","setTabHandler","tabPos","onclick","getAttribute","removeAttribute","setAttribute"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,CAAX;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACC,gBAAT,CAA0B,mBAA1B,CAAb,EACA;;AAEA,KAAIE,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGJ,IAAI,CAACK,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC/B,MAAIE,GAAG,GAAGN,IAAI,CAACI,CAAD,CAAd;AACAG,EAAAA,aAAa,CAACD,GAAD,EAAMF,CAAN,CAAb;AACD,EACD;AAEA;;;AACA,SAASG,aAAT,CAAuBD,GAAvB,EAA4BE,MAA5B,EAAoC;AAClCF,EAAAA,GAAG,CAACG,OAAJ,GAAc,YAAW;AACvB,SAAIL,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGJ,IAAI,CAACK,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC/B,UAAGJ,IAAI,CAACI,CAAD,CAAJ,CAAQM,YAAR,CAAqB,OAArB,CAAH,EAAkC;AAChCV,QAAAA,IAAI,CAACI,CAAD,CAAJ,CAAQO,eAAR,CAAwB,OAAxB;AACD;AACF,KALsB,CAMvB;;;AAEAL,IAAAA,GAAG,CAACM,YAAJ,CAAiB,OAAjB,EAA0B,QAA1B,EARuB,CASvB;;AAEA,SAAIR,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGD,MAAM,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,UAAGD,MAAM,CAACC,CAAD,CAAN,CAAUM,YAAV,CAAuB,OAAvB,CAAH,EAAoC;AAClCP,QAAAA,MAAM,CAACC,CAAD,CAAN,CAAUO,eAAV,CAA0B,OAA1B;AACD;AACF,KAfsB,CAgBvB;;;AAEAR,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeI,YAAf,CAA4B,OAA5B,EAAqC,cAArC,EAlBuB,CAmBvB;AACD,GApBD;AAqBD","file":"practice.e31bb0bc.js","sourceRoot":"..","sourcesContent":["var tabs = document.querySelectorAll('.info-box li a');\r\nvar panels = document.querySelectorAll('.info-box article');\r\n//首先我们保存所有的选项卡和所有的面板引用到两个变量中，名为 tabs 和 panels，这样此后我们可以容易地为它们做事。\r\n\r\nfor(i = 0; i < tabs.length; i++) {\r\n  var tab = tabs[i];\r\n  setTabHandler(tab, i);\r\n}\r\n//使用 for 循环遍历所有的选项卡，并且在每一个上运行叫做setTabHandler() 的函数，此函数建立当每个选项卡被点击时应该发生的功能。 运行时， 函数会被传递选项卡，和一个索引数i 指明选项卡在tabs 数组中的位置。\r\n\r\n//创建了一个 onclick 事件来处理点击，所以当标签被点击的时候，接下来会发生：\r\nfunction setTabHandler(tab, tabPos) {\r\n  tab.onclick = function() {\r\n    for(i = 0; i < tabs.length; i++) {\r\n      if(tabs[i].getAttribute('class')) {\r\n        tabs[i].removeAttribute('class');\r\n      }\r\n    }\r\n    //用一个 for 循环清除所有tab当前存在的类。\r\n\r\n    tab.setAttribute('class', 'active');\r\n    //当点击的时候在标签上创建了一个 active 类——从相关联的元素中继承了CSS的一些属性，具有和panels的样式相同的 color 和 background-color。\r\n\r\n    for(i = 0; i < panels.length; i++) {\r\n      if(panels[i].getAttribute('class')) {\r\n        panels[i].removeAttribute('class');\r\n      }\r\n    }\r\n    //用一个 for 循环清除所有panel当前存在的类。\r\n\r\n    panels[tabPos].setAttribute('class', 'active-panel');\r\n    //当标签被点击的时候在和标签相对应的面板上创建了一个 active-panel 类——从相关联的元素中继承了CSS的一些属性，使其 z-index 属性被设置为1，让它能位于所有的面板的上面。\r\n  }\r\n}"]}